{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LG\\\\Documents\\\\MyTimetodo\\\\TimeTODOhh\\\\client\\\\src\\\\components\\\\todo\\\\Todo.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Todo() {\n  _s();\n  // 할 일 리스트 상태 관리\n  const [todos, setTodos] = useState([{\n    id: 1,\n    text: '친구 생일선물 사기',\n    status: false\n  }, {\n    id: 2,\n    text: '과제하기',\n    status: false\n  }, {\n    id: 3,\n    text: '노트 체크하기',\n    status: false\n  }, {\n    id: 4,\n    text: '쓰레기 버리기',\n    status: true\n  }]);\n\n  // 새로운 할 일 입력 관리\n  const [newTodo, setNewTodo] = useState('');\n\n  // 할 일 추가 함수\n  const addTodo = () => {\n    if (newTodo.trim()) {\n      const newTodoItem = {\n        id: todos.length + 1,\n        text: newTodo,\n        status: false\n      };\n      setTodos([...todos, newTodoItem]);\n      setNewTodo('');\n    }\n  };\n\n  // 할 일 상태 업데이트 함수\n  const updateStatus = id => {\n    setTodos(todos.map(todo => todo.id === id ? {\n      ...todo,\n      status: !todo.status\n    } : todo));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: styles.title,\n      children: \"\\uD560 \\uC77C \\uBAA9\\uB85D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: styles.todoList,\n      children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: styles.todoItem,\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          className: styles.checkboxContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: todo.status,\n            onChange: () => updateStatus(todo.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.checkmark\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: todo.status ? styles.completed : '',\n            children: todo.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this)\n      }, todo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.inputContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\uD560 \\uC77C \\uCD94\\uAC00\\uD558\\uAE30...\",\n        value: newTodo,\n        onChange: e => setNewTodo(e.target.value),\n        className: styles.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTodo,\n        className: styles.addButton,\n        children: \"\\uCD94\\uAC00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n_s(Todo, \"Ko1DIXE6biS33+wvIGbLWdpPOFg=\");\n_c = Todo;\nexport default Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Todo","_s","todos","setTodos","id","text","status","newTodo","setNewTodo","addTodo","trim","newTodoItem","length","updateStatus","map","todo","className","styles","container","children","title","fileName","_jsxFileName","lineNumber","columnNumber","todoList","todoItem","checkboxContainer","type","checked","onChange","checkmark","completed","inputContainer","placeholder","value","e","target","input","onClick","addButton","_c","$RefreshReg$"],"sources":["C:/Users/LG/Documents/MyTimetodo/TimeTODOhh/client/src/components/todo/Todo.js"],"sourcesContent":["import React from 'react';\r\nimport {useState} from \"react\";\r\n\r\nfunction Todo() {\r\n    // 할 일 리스트 상태 관리\r\n    const [todos, setTodos] = useState([\r\n        { id: 1, text: '친구 생일선물 사기', status: false },\r\n        { id: 2, text: '과제하기', status: false },\r\n        { id: 3, text: '노트 체크하기', status: false },\r\n        { id: 4, text: '쓰레기 버리기', status: true }\r\n    ]);\r\n\r\n    // 새로운 할 일 입력 관리\r\n    const [newTodo, setNewTodo] = useState('');\r\n\r\n    // 할 일 추가 함수\r\n    const addTodo = () => {\r\n        if (newTodo.trim()) {\r\n            const newTodoItem = {\r\n                id: todos.length + 1,\r\n                text: newTodo,\r\n                status: false\r\n            };\r\n            setTodos([...todos, newTodoItem]);\r\n            setNewTodo('');\r\n        }\r\n    };\r\n\r\n    // 할 일 상태 업데이트 함수\r\n    const updateStatus = (id) => {\r\n        setTodos(todos.map(todo =>\r\n            todo.id === id ? { ...todo, status: !todo.status } : todo\r\n        ));\r\n    };\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <h2 className={styles.title}>할 일 목록</h2>\r\n            <ul className={styles.todoList}>\r\n                {todos.map(todo => (\r\n                    <li key={todo.id} className={styles.todoItem}>\r\n                        <label className={styles.checkboxContainer}>\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                checked={todo.status}\r\n                                onChange={() => updateStatus(todo.id)}\r\n                            />\r\n                            <span className={styles.checkmark}></span>\r\n                            <span className={todo.status ? styles.completed : ''}>\r\n                                {todo.text}\r\n                            </span>\r\n                        </label>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n            <div className={styles.inputContainer}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"할 일 추가하기...\"\r\n                    value={newTodo}\r\n                    onChange={(e) => setNewTodo(e.target.value)}\r\n                    className={styles.input}\r\n                />\r\n                <button onClick={addTodo} className={styles.addButton}>\r\n                    추가\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Todo;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}